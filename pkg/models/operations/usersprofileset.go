// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UsersProfileSetSecurity struct {
	SlackAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type UsersProfileSetApplicationJSON struct {
	// Name of a single key to set. Usable only if `profile` is not passed.
	Name *string `json:"name,omitempty"`
	// Collection of key:value pairs presented as a URL-encoded JSON hash. At most 50 fields may be set. Each field name is limited to 255 characters.
	Profile *string `json:"profile,omitempty"`
	// ID of user to change. This argument may only be specified by team admins on paid teams.
	User *string `json:"user,omitempty"`
	// Value to set a single key to. Usable only if `profile` is not passed.
	Value *string `json:"value,omitempty"`
}

type UsersProfileSetRequest struct {
	RequestBody *UsersProfileSetApplicationJSON `request:"mediaType=application/json"`
	// Authentication token. Requires scope: `users.profile:write`
	Token string `header:"style=simple,explode=false,name=token"`
}

type UsersProfileSetResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Typical error response
	UsersProfileSetErrorSchema map[string]map[string]interface{}
	// Typical success response
	UsersProfileSetSchema map[string]map[string]interface{}
}

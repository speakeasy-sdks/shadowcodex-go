// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ViewsUpdateSecurity struct {
	SlackAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type ViewsUpdateRequest struct {
	// A unique identifier of the view set by the developer. Must be unique for all views on a team. Max length of 255 characters. Either `view_id` or `external_id` is required.
	ExternalID *string `queryParam:"style=form,explode=true,name=external_id"`
	// A string that represents view state to protect against possible race conditions.
	Hash *string `queryParam:"style=form,explode=true,name=hash"`
	// Authentication token. Requires scope: `none`
	Token string `header:"style=simple,explode=false,name=token"`
	// A [view object](/reference/surfaces/views). This must be a JSON-encoded string.
	View *string `queryParam:"style=form,explode=true,name=view"`
	// A unique identifier of the view to be updated. Either `view_id` or `external_id` is required.
	ViewID *string `queryParam:"style=form,explode=true,name=view_id"`
}

type ViewsUpdateResponse struct {
	ContentType string
	// Typical error response.
	DefaultErrorTemplate map[string]map[string]interface{}
	// Typical success response includes the updated view payload.
	DefaultSuccessTemplate map[string]map[string]interface{}
	StatusCode             int
	RawResponse            *http.Response
}

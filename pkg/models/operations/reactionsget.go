// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ReactionsGetSecurity struct {
	SlackAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type ReactionsGetRequest struct {
	// Channel where the message to get reactions for was posted.
	Channel *string `queryParam:"style=form,explode=true,name=channel"`
	// File to get reactions for.
	File *string `queryParam:"style=form,explode=true,name=file"`
	// File comment to get reactions for.
	FileComment *string `queryParam:"style=form,explode=true,name=file_comment"`
	// If true always return the complete reaction list.
	Full *bool `queryParam:"style=form,explode=true,name=full"`
	// Timestamp of the message to get reactions for.
	Timestamp *string `queryParam:"style=form,explode=true,name=timestamp"`
	// Authentication token. Requires scope: `reactions:read`
	Token string `queryParam:"style=form,explode=true,name=token"`
}

type ReactionsGetResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Typical error response
	ReactionsGetErrorSchema map[string]map[string]interface{}
	// Typical success response
	ReactionsGetSuccessSchema map[string]interface{}
}

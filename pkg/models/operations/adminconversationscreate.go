// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type AdminConversationsCreateSecurity struct {
	SlackAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type AdminConversationsCreateApplicationJSON struct {
	// Description of the public or private channel to create.
	Description *string `json:"description,omitempty"`
	// When `true`, creates a private channel instead of a public channel
	IsPrivate bool `json:"is_private"`
	// Name of the public or private channel to create.
	Name string `json:"name"`
	// When `true`, the channel will be available org-wide. Note: if the channel is not `org_wide=true`, you must specify a `team_id` for this channel
	OrgWide *bool `json:"org_wide,omitempty"`
	// The workspace to create the channel in. Note: this argument is required unless you set `org_wide=true`.
	TeamID *string `json:"team_id,omitempty"`
}

type AdminConversationsCreateRequest struct {
	RequestBody AdminConversationsCreateApplicationJSON `request:"mediaType=application/json"`
	// Authentication token. Requires scope: `admin.conversations:write`
	Token string `header:"style=simple,explode=false,name=token"`
}

type AdminConversationsCreateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Typical error response
	AdminConversationsCreateErrorSchema map[string]map[string]interface{}
	// Typical success response
	AdminConversationsCreateSchema map[string]map[string]interface{}
}

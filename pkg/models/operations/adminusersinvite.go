// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type AdminUsersInviteSecurity struct {
	SlackAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type AdminUsersInviteApplicationJSON struct {
	// A comma-separated list of `channel_id`s for this user to join. At least one channel is required.
	ChannelIds string `json:"channel_ids"`
	// An optional message to send to the user in the invite email.
	CustomMessage *string `json:"custom_message,omitempty"`
	// The email address of the person to invite.
	Email string `json:"email"`
	// Timestamp when guest account should be disabled. Only include this timestamp if you are inviting a guest user and you want their account to expire on a certain date.
	GuestExpirationTs *string `json:"guest_expiration_ts,omitempty"`
	// Is this user a multi-channel guest user? (default: false)
	IsRestricted *bool `json:"is_restricted,omitempty"`
	// Is this user a single channel guest user? (default: false)
	IsUltraRestricted *bool `json:"is_ultra_restricted,omitempty"`
	// Full name of the user.
	RealName *string `json:"real_name,omitempty"`
	// Allow this invite to be resent in the future if a user has not signed up yet. (default: false)
	Resend *bool `json:"resend,omitempty"`
	// The ID (`T1234`) of the workspace.
	TeamID string `json:"team_id"`
}

type AdminUsersInviteRequest struct {
	RequestBody AdminUsersInviteApplicationJSON `request:"mediaType=application/json"`
	// Authentication token. Requires scope: `admin.users:write`
	Token string `header:"style=simple,explode=false,name=token"`
}

type AdminUsersInviteResponse struct {
	ContentType string
	// Typical error response
	DefaultErrorTemplate map[string]map[string]interface{}
	// Typical success response
	DefaultSuccessTemplate map[string]map[string]interface{}
	StatusCode             int
	RawResponse            *http.Response
}

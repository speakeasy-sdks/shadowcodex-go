// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ConversationsInfoSecurity struct {
	SlackAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type ConversationsInfoRequest struct {
	// Conversation ID to learn more about
	Channel *string `queryParam:"style=form,explode=true,name=channel"`
	// Set this to `true` to receive the locale for this conversation. Defaults to `false`
	IncludeLocale *bool `queryParam:"style=form,explode=true,name=include_locale"`
	// Set to `true` to include the member count for the specified conversation. Defaults to `false`
	IncludeNumMembers *bool `queryParam:"style=form,explode=true,name=include_num_members"`
	// Authentication token. Requires scope: `conversations:read`
	Token *string `queryParam:"style=form,explode=true,name=token"`
}

type ConversationsInfoResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Typical error response when a channel cannot be found
	ConversationsInfoErrorSchema map[string]map[string]interface{}
	// Typical success response for a public channel. (Also, a response from a private channel and a multi-party IM is very similar to this example.)
	ConversationsInfoSuccessSchema map[string]map[string]interface{}
}

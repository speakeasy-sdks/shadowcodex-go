// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ChatScheduledMessagesListSecurity struct {
	SlackAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type ChatScheduledMessagesListRequest struct {
	// The channel of the scheduled messages
	Channel *string `queryParam:"style=form,explode=true,name=channel"`
	// For pagination purposes, this is the `cursor` value returned from a previous call to `chat.scheduledmessages.list` indicating where you want to start this call from.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// A UNIX timestamp of the latest value in the time range
	Latest *float64 `queryParam:"style=form,explode=true,name=latest"`
	// Maximum number of original entries to return.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// A UNIX timestamp of the oldest value in the time range
	Oldest *float64 `queryParam:"style=form,explode=true,name=oldest"`
	// Authentication token. Requires scope: `none`
	Token *string `header:"style=simple,explode=false,name=token"`
}

type ChatScheduledMessagesListResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Typical error response if the channel passed is invalid
	ChatScheduledMessagesListErrorSchema map[string]map[string]interface{}
	// Typical success response
	ChatScheduledMessagesListSchema map[string]map[string]interface{}
}

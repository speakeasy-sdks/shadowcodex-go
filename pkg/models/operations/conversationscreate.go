// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ConversationsCreateSecurity struct {
	SlackAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type ConversationsCreateApplicationJSON struct {
	// Create a private channel instead of a public one
	IsPrivate *bool `json:"is_private,omitempty"`
	// Name of the public or private channel to create
	Name *string `json:"name,omitempty"`
}

type ConversationsCreateRequest struct {
	RequestBody *ConversationsCreateApplicationJSON `request:"mediaType=application/json"`
	// Authentication token. Requires scope: `conversations:write`
	Token *string `header:"style=simple,explode=false,name=token"`
}

type ConversationsCreateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Typical error response when name already in use
	ConversationsCreateErrorSchema map[string]map[string]interface{}
	// If successful, the command returns a rather stark [conversation object](/types/conversation)
	ConversationsCreateSuccessSchema map[string]map[string]interface{}
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UsersListSecurity struct {
	SlackAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type UsersListRequest struct {
	// Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// Set this to `true` to receive the locale for users. Defaults to `false`
	IncludeLocale *bool `queryParam:"style=form,explode=true,name=include_locale"`
	// The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached. Providing no `limit` value will result in Slack attempting to deliver you the entire result set. If the collection is too large you may experience `limit_required` or HTTP 500 errors.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Authentication token. Requires scope: `users:read`
	Token *string `queryParam:"style=form,explode=true,name=token"`
}

type UsersListResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Typical error response
	UsersListErrorSchema map[string]map[string]interface{}
	// Typical success response
	UsersListSchema map[string]map[string]interface{}
}

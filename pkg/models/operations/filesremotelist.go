// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type FilesRemoteListSecurity struct {
	SlackAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type FilesRemoteListRequest struct {
	// Filter files appearing in a specific channel, indicated by its ID.
	Channel *string `queryParam:"style=form,explode=true,name=channel"`
	// Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// The maximum number of items to return.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Authentication token. Requires scope: `remote_files:read`
	Token *string `queryParam:"style=form,explode=true,name=token"`
	// Filter files created after this timestamp (inclusive).
	TsFrom *float64 `queryParam:"style=form,explode=true,name=ts_from"`
	// Filter files created before this timestamp (inclusive).
	TsTo *float64 `queryParam:"style=form,explode=true,name=ts_to"`
}

type FilesRemoteListResponse struct {
	ContentType string
	// Typical error response
	DefaultErrorTemplate map[string]map[string]interface{}
	// Typical success response
	DefaultSuccessTemplate map[string]map[string]interface{}
	StatusCode             int
	RawResponse            *http.Response
}

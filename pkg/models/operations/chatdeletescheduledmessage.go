// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ChatDeleteScheduledMessageSecurity struct {
	SlackAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type ChatDeleteScheduledMessageApplicationJSON struct {
	// Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope.
	AsUser *bool `json:"as_user,omitempty"`
	// The channel the scheduled_message is posting to
	Channel string `json:"channel"`
	// `scheduled_message_id` returned from call to chat.scheduleMessage
	ScheduledMessageID string `json:"scheduled_message_id"`
}

type ChatDeleteScheduledMessageRequest struct {
	RequestBody ChatDeleteScheduledMessageApplicationJSON `request:"mediaType=application/json"`
	// Authentication token. Requires scope: `chat:write`
	Token string `header:"style=simple,explode=false,name=token"`
}

type ChatDeleteScheduledMessageResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Typical error response if no message is found
	ChatDeleteScheduledMessageErrorSchema map[string]map[string]interface{}
	// Typical success response
	ChatDeleteScheduledMessageSchema map[string]map[string]interface{}
}

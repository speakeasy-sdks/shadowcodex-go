// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type FilesUploadSecurity struct {
	SlackAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type FilesUploadRequestBody struct {
	// Comma-separated list of channel names or IDs where the file will be shared.
	Channels *string `form:"name=channels"`
	// File contents via a POST variable. If omitting this parameter, you must provide a `file`.
	Content *string `form:"name=content"`
	// File contents via `multipart/form-data`. If omitting this parameter, you must submit `content`.
	File *string `form:"name=file"`
	// Filename of file.
	Filename *string `form:"name=filename"`
	// A [file type](/types/file#file_types) identifier.
	Filetype *string `form:"name=filetype"`
	// The message text introducing the file in specified `channels`.
	InitialComment *string `form:"name=initial_comment"`
	// Provide another message's `ts` value to upload this file as a reply. Never use a reply's `ts` value; use its parent instead.
	ThreadTs *float64 `form:"name=thread_ts"`
	// Title of file.
	Title *string `form:"name=title"`
	// Authentication token. Requires scope: `files:write:user`
	Token *string `form:"name=token"`
}

type FilesUploadResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Typical error response
	FilesUploadErrorSchema map[string]map[string]interface{}
	// Success response after uploading a file to a channel with an initial message
	FilesUploadSchema map[string]map[string]interface{}
}

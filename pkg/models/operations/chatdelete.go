// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ChatDeleteSecurity struct {
	SlackAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type ChatDeleteApplicationJSON struct {
	// Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope.
	AsUser *bool `json:"as_user,omitempty"`
	// Channel containing the message to be deleted.
	Channel *string `json:"channel,omitempty"`
	// Timestamp of the message to be deleted.
	Ts *float64 `json:"ts,omitempty"`
}

type ChatDeleteRequest struct {
	RequestBody *ChatDeleteApplicationJSON `request:"mediaType=application/json"`
	// Authentication token. Requires scope: `chat:write`
	Token *string `header:"style=simple,explode=false,name=token"`
}

type ChatDeleteResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Typical error response
	ChatDeleteErrorSchema map[string]map[string]interface{}
	// Typical success response
	ChatDeleteSuccessSchema map[string]map[string]interface{}
}

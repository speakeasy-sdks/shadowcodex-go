// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ConversationsListSecurity struct {
	SlackAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type ConversationsListRequest struct {
	// Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// Set to `true` to exclude archived channels from the list
	ExcludeArchived *bool `queryParam:"style=form,explode=true,name=exclude_archived"`
	// The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer no larger than 1000.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Authentication token. Requires scope: `conversations:read`
	Token *string `queryParam:"style=form,explode=true,name=token"`
	// Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`
	Types *string `queryParam:"style=form,explode=true,name=types"`
}

type ConversationsListResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Typical error response
	ConversationsListErrorSchema map[string]map[string]interface{}
	// Typical success response with only public channels
	ConversationsListSuccessSchema map[string]map[string]interface{}
}

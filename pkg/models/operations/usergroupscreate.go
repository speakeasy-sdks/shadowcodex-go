// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UsergroupsCreateSecurity struct {
	SlackAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type UsergroupsCreateApplicationJSON struct {
	// A comma separated string of encoded channel IDs for which the User Group uses as a default.
	Channels *string `json:"channels,omitempty"`
	// A short description of the User Group.
	Description *string `json:"description,omitempty"`
	// A mention handle. Must be unique among channels, users and User Groups.
	Handle *string `json:"handle,omitempty"`
	// Include the number of users in each User Group.
	IncludeCount *bool `json:"include_count,omitempty"`
	// A name for the User Group. Must be unique among User Groups.
	Name string `json:"name"`
}

type UsergroupsCreateRequest struct {
	RequestBody UsergroupsCreateApplicationJSON `request:"mediaType=application/json"`
	// Authentication token. Requires scope: `usergroups:write`
	Token string `header:"style=simple,explode=false,name=token"`
}

type UsergroupsCreateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Typical error response
	UsergroupsCreateErrorSchema map[string]map[string]interface{}
	// Typical success response
	UsergroupsCreateSchema map[string]map[string]interface{}
}
